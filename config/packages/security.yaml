security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: auto

    role_hierarchy:
        ROLE_SUPER_ADMIN:  [ ROLE_SUPER_ADMIN ]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: nom
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

            # This allows the user to login by submitting a username and password
            # Reference: https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                # The route name that the login form submits to
                check_path: app_login
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: app_login
                default_target_path: /app/home/

            logout:
                # The route name the user can go to in order to logout
                path: app_logout
                # The name of the route to redirect to after logging out
                target: app_login

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_USER }
        - { path: ^/account-managment, roles: ROLE_USER }
